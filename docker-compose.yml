version: '3.9'  

services:
  postgres:
    image: postgres:15
    environment:
      POSTGRES_USER: airflow
      POSTGRES_PASSWORD: airflow
      POSTGRES_DB: airflow
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      retries: 2

  airflow-webserver:
    image: apache/airflow:2.9.1
    restart: always
    depends_on:
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
      AIRFLOW__WEBSERVER__SECRET_KEY: supersecret
    volumes:
      - ./dags:/opt/airflow/dags
      # - ./data:/opt/airflow/data
      # - ./.env:/opt/airflow/.env
      - ./requirements.txt:/requirements.txt
    env_file:
      - .env
    ports:
      - "8080:8080"
    command: >
      bash -c "pip install -r /requirements.txt && airflow webserver"

  airflow-scheduler:
    image: apache/airflow:2.9.1
    restart: always
    depends_on:
      airflow-webserver:
        condition: service_started
      postgres:
        condition: service_healthy
    environment:
      AIRFLOW__CORE__EXECUTOR: LocalExecutor
      AIRFLOW__CORE__SQL_ALCHEMY_CONN: postgresql+psycopg2://airflow:airflow@postgres/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./data:/opt/airflow/data
      # - ./.env:/opt/airflow/.env
      - ./requirements.txt:/requirements.txt
    env_file:
      - .env
    command: >
      bash -c "pip install -r /requirements.txt && airflow scheduler"

volumes:
  postgres_data: